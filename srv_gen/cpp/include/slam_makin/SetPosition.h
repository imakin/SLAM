/* Auto-generated by genmsg_cpp for file /home/kaca/ros/slam_makin/srv/SetPosition.srv */
#ifndef SLAM_MAKIN_SERVICE_SETPOSITION_H
#define SLAM_MAKIN_SERVICE_SETPOSITION_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "geometry_msgs/Point.h"



namespace slam_makin
{
template <class ContainerAllocator>
struct SetPositionRequest_ {
  typedef SetPositionRequest_<ContainerAllocator> Type;

  SetPositionRequest_()
  : position()
  {
  }

  SetPositionRequest_(const ContainerAllocator& _alloc)
  : position(_alloc)
  {
  }

  typedef  ::geometry_msgs::Point_<ContainerAllocator>  _position_type;
   ::geometry_msgs::Point_<ContainerAllocator>  position;


private:
  static const char* __s_getDataType_() { return "slam_makin/SetPositionRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "e7bb0ef028c744b081acdc57743b11d8"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e7bb0ef028c744b081acdc57743b11d8"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "geometry_msgs/Point position\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, position);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, position);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(position);
    return size;
  }

  typedef boost::shared_ptr< ::slam_makin::SetPositionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::slam_makin::SetPositionRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetPositionRequest
typedef  ::slam_makin::SetPositionRequest_<std::allocator<void> > SetPositionRequest;

typedef boost::shared_ptr< ::slam_makin::SetPositionRequest> SetPositionRequestPtr;
typedef boost::shared_ptr< ::slam_makin::SetPositionRequest const> SetPositionRequestConstPtr;


template <class ContainerAllocator>
struct SetPositionResponse_ {
  typedef SetPositionResponse_<ContainerAllocator> Type;

  SetPositionResponse_()
  {
  }

  SetPositionResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "slam_makin/SetPositionResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e7bb0ef028c744b081acdc57743b11d8"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::slam_makin::SetPositionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::slam_makin::SetPositionResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetPositionResponse
typedef  ::slam_makin::SetPositionResponse_<std::allocator<void> > SetPositionResponse;

typedef boost::shared_ptr< ::slam_makin::SetPositionResponse> SetPositionResponsePtr;
typedef boost::shared_ptr< ::slam_makin::SetPositionResponse const> SetPositionResponseConstPtr;

struct SetPosition
{

typedef SetPositionRequest Request;
typedef SetPositionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetPosition
} // namespace slam_makin

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::slam_makin::SetPositionRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::slam_makin::SetPositionRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::slam_makin::SetPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e7bb0ef028c744b081acdc57743b11d8";
  }

  static const char* value(const  ::slam_makin::SetPositionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe7bb0ef028c744b0ULL;
  static const uint64_t static_value2 = 0x81acdc57743b11d8ULL;
};

template<class ContainerAllocator>
struct DataType< ::slam_makin::SetPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "slam_makin/SetPositionRequest";
  }

  static const char* value(const  ::slam_makin::SetPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::slam_makin::SetPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/Point position\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
";
  }

  static const char* value(const  ::slam_makin::SetPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::slam_makin::SetPositionRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::slam_makin::SetPositionResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::slam_makin::SetPositionResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::slam_makin::SetPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::slam_makin::SetPositionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::slam_makin::SetPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "slam_makin/SetPositionResponse";
  }

  static const char* value(const  ::slam_makin::SetPositionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::slam_makin::SetPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::slam_makin::SetPositionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::slam_makin::SetPositionResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::slam_makin::SetPositionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.position);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetPositionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::slam_makin::SetPositionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetPositionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<slam_makin::SetPosition> {
  static const char* value() 
  {
    return "e7bb0ef028c744b081acdc57743b11d8";
  }

  static const char* value(const slam_makin::SetPosition&) { return value(); } 
};

template<>
struct DataType<slam_makin::SetPosition> {
  static const char* value() 
  {
    return "slam_makin/SetPosition";
  }

  static const char* value(const slam_makin::SetPosition&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<slam_makin::SetPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e7bb0ef028c744b081acdc57743b11d8";
  }

  static const char* value(const slam_makin::SetPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<slam_makin::SetPositionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "slam_makin/SetPosition";
  }

  static const char* value(const slam_makin::SetPositionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<slam_makin::SetPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e7bb0ef028c744b081acdc57743b11d8";
  }

  static const char* value(const slam_makin::SetPositionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<slam_makin::SetPositionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "slam_makin/SetPosition";
  }

  static const char* value(const slam_makin::SetPositionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SLAM_MAKIN_SERVICE_SETPOSITION_H

